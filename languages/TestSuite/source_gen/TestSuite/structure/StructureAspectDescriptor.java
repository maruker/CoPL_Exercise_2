package TestSuite.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptTestCase = createDescriptorForTestCase();
  /*package*/ final ConceptDescriptor myConceptTestSuite = createDescriptorForTestSuite();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0x2101cba8c59b492aL, 0xbe832a9e24bb3df8L, "SoSe21");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptTestCase, myConceptTestSuite);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.TestCase:
        return myConceptTestCase;
      case LanguageConceptSwitch.TestSuite:
        return myConceptTestSuite;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForTestCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TestSuite", "TestCase", 0xf619d6b6154498cL, 0x845eb060aa497879L, 0x5a9016f2b09b64e6L);
    b.class_(false, false, false);
    b.origin("r:33491cad-5c5b-47f1-b9b7-a49c05b8f8af(TestSuite.structure)/6525741091660719334");
    b.version(2);
    b.aggregate("value", 0x5a9016f2b09ba45fL).target(0x2101cba8c59b492aL, 0xbe832a9e24bb3df8L, 0x1a76bf05f1a8eb2bL).optional(false).ordered(true).multiple(false).origin("6525741091660735583").done();
    b.aggregate("function", 0x8b0543b7692cda1L).target(0x2101cba8c59b492aL, 0xbe832a9e24bb3df8L, 0x475058038f9bbcd1L).optional(false).ordered(true).multiple(false).origin("626092962573634977").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestSuite() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TestSuite", "TestSuite", 0xf619d6b6154498cL, 0x845eb060aa497879L, 0x5a9016f2b09b64e5L);
    b.class_(false, false, true);
    b.origin("r:33491cad-5c5b-47f1-b9b7-a49c05b8f8af(TestSuite.structure)/6525741091660719333");
    b.version(2);
    b.aggregate("testCases", 0x5a9016f2b09b64e7L).target(0xf619d6b6154498cL, 0x845eb060aa497879L, 0x5a9016f2b09b64e6L).optional(true).ordered(true).multiple(true).origin("6525741091660719335").done();
    return b.create();
  }
}
